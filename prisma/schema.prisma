generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  email        String        @unique
  passwordHash String        @map("password_hash")
  theme        String        @default("system")
  currency     String        @default("BRL")
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  budgets      Budget[]
  categories   Category[]
  goals        Goal[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  userId       Int           @map("user_id")
  budgets      Budget[]
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  description String
  amount      Float
  type        String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  userId      Int      @map("user_id")
  categoryId  Int      @map("category_id")
  goalId      Int?     @map("goal_id")
  category    Category @relation(fields: [categoryId], references: [id])
  goal        Goal?    @relation(fields: [goalId], references: [id])
  user        User     @relation(fields: [userId], references: [id])

  @@map("transactions")
}

model Budget {
  id          Int      @id @default(autoincrement())
  monthYear   DateTime @map("month_year")
  limitAmount Float    @map("limit_amount")
  spentAmount Float    @default(0) @map("spent_amount")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  userId      Int      @map("user_id")
  categoryId  Int      @map("category_id")
  category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])

  @@map("budgets")
}

model Goal {
  id            Int           @id @default(autoincrement())
  description   String
  targetAmount  Float         @map("target_amount")
  currentAmount Float         @default(0) @map("current_amount")
  targetDate    DateTime      @map("target_date")
  status        String        @default("active")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  userId        Int           @map("user_id")
  user          User          @relation(fields: [userId], references: [id])
  transactions  Transaction[]

  @@map("goals")
}
